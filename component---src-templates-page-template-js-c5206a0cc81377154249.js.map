{"version":3,"sources":["webpack:///./src/components/Article/Bodytext.js","webpack:///./node_modules/core-js/modules/es6.string.bold.js","webpack:///./src/components/Page/Page.js","webpack:///./src/templates/PageTemplate.js"],"names":["Bodytext","props","html","theme","Fragment","dangerouslySetInnerHTML","__html","time","duration","long","font","lineHeight","s","size","l","m","xxl","weight","bold","color","brand","primary","radius","default","line","neutral","gray","c","createHTML","this","Page","page","title","frontmatter","Headline","PageTemplate","data","facebook","site","siteMetadata","Consumer","Article","Seo","pageQuery"],"mappings":"sJAoFeA,IAjFE,SAAAC,GAAU,IACjBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,kBAAC,IAAMC,SAAP,KACE,yBAA0BC,wBAAyB,CAAEC,OAAQJ,GAA7D,sCAK0BC,EAAMI,KAAKC,SAASC,KAQzBN,EAAMO,KAAKC,WAAWC,EACxBT,EAAMO,KAAKG,KAAKC,EAIhBX,EAAMO,KAAKG,KAAKE,EACdZ,EAAMO,KAAKC,WAAWI,EAIxBZ,EAAMO,KAAKG,KAAKD,EACdT,EAAMO,KAAKC,WAAWK,IAatBb,EAAMO,KAAKO,OAAOC,KACxBf,EAAMgB,MAAMC,MAAMC,QAOVlB,EAAMU,KAAKS,OAAOC,QAEfpB,EAAMqB,KAAKL,MAGjBhB,EAAMgB,MAAMM,QAAQC,KAAKC,MAlD7C,cADF,uRAM4BxB,EAAMI,KAAKC,SAASC,KANhD,+BAM4BN,EAAMI,KAAKC,SAASC,KANhD,uBAM4BN,EAAMI,KAAKC,SAASC,KANhD,yKAcuBN,EAAMO,KAAKC,WAAWC,EAd7C,cAeqBT,EAAMO,KAAKG,KAAKC,EAfrC,4DAmBqBX,EAAMO,KAAKG,KAAKE,EAnBrC,gBAoBuBZ,EAAMO,KAAKC,WAAWI,EApB7C,2DAwBqBZ,EAAMO,KAAKG,KAAKD,EAxBrC,gBAyBuBT,EAAMO,KAAKC,WAAWK,IAzB7C,gQAsCuBb,EAAMO,KAAKO,OAAOC,KAtCzC,UAuCiBf,EAAMgB,MAAMC,MAAMC,QAvCnC,wLA8CyBlB,EAAMU,KAAKS,OAAOC,QA9C3C,qCAgD4BpB,EAAMqB,KAAKL,MAhDvC,6EAmDsBhB,EAAMgB,MAAMM,QAAQC,KAAKC,EAnD/C,iZAM4BxB,EAAMI,KAAKC,SAASC,KAQzBN,EAAMO,KAAKC,WAAWC,EACxBT,EAAMO,KAAKG,KAAKC,EAIhBX,EAAMO,KAAKG,KAAKE,EACdZ,EAAMO,KAAKC,WAAWI,EAIxBZ,EAAMO,KAAKG,KAAKD,EACdT,EAAMO,KAAKC,WAAWK,IAatBb,EAAMO,KAAKO,OAAOC,KACxBf,EAAMgB,MAAMC,MAAMC,QAOVlB,EAAMU,KAAKS,OAAOC,QAEfpB,EAAMqB,KAAKL,MAGjBhB,EAAMgB,MAAMM,QAAQC,KAAKC,Q,kCCxDnD,EAAQ,OAAR,CAA0B,QAAQ,SAAUC,GAC1C,OAAO,WACL,OAAOA,EAAWC,KAAM,IAAK,GAAI,S,kHC0BtBC,EAxBF,SAAA7B,GAAU,IAAD,EAOhBA,EALF8B,KACE7B,EAHgB,EAGhBA,KACe8B,EAJC,EAIhBC,YAAeD,MAEjB7B,EACEF,EADFE,MAGF,OACE,kBAAC,IAAMC,SAAP,KACE,gCACE,kBAAC8B,EAAA,EAAD,CAAUF,MAAOA,EAAO7B,MAAOA,KAEjC,kBAACH,EAAA,EAAD,CAAUE,KAAMA,EAAMC,MAAOA,M,YCpBnC,0CAqCegC,UA7BM,SAAAlC,GAAU,IAAD,EAQxBA,EANFmC,KACEL,EAHwB,EAGxBA,KAEkBM,EALM,EAIxBC,KACEC,aAAgBF,SAKtB,OACE,kBAAC,IAAMjC,SAAP,KACE,kBAAC,eAAaoC,SAAd,MACG,SAAArC,GAAK,OACJ,kBAACsC,EAAA,EAAD,CAAStC,MAAOA,GACd,kBAAC,EAAD,CAAM4B,KAAMA,EAAM5B,MAAOA,QAK/B,kBAACuC,EAAA,EAAD,CAAKN,KAAML,EAAMM,SAAUA,MApBjC,IAgCaM,EAAS","file":"component---src-templates-page-template-js-c5206a0cc81377154249.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Bodytext = props => {\n  const { html, theme } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"bodytext\" dangerouslySetInnerHTML={{ __html: html }} />\n\n      <style jsx>{`\n        .bodytext {\n          animation-name: bodytextEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(h2),\n          :global(h3) {\n            margin: 1.5em 0 1em;\n          }\n\n          :global(h2) {\n            line-height: ${theme.font.lineHeight.s};\n            font-size: ${theme.font.size.l};\n          }\n\n          :global(h3) {\n            font-size: ${theme.font.size.m};\n            line-height: ${theme.font.lineHeight.m};\n          }\n\n          :global(p) {\n            font-size: ${theme.font.size.s};\n            line-height: ${theme.font.lineHeight.xxl};\n            margin: 0 0 1.5em;\n          }\n          :global(ul) {\n            list-style: circle;\n            margin: 0 0 1.5em;\n            padding: 0 0 0 1.5em;\n          }\n          :global(li) {\n            margin: 0.7em 0;\n            line-height: 1.5;\n          }\n          :global(a) {\n            font-weight: ${theme.font.weight.bold};\n            color: ${theme.color.brand.primary};\n            text-decoration: underline;\n          }\n          :global(a.gatsby-resp-image-link) {\n            border: 0;\n            display: block;\n            margin: 2.5em 0;\n            border-radius: ${theme.size.radius.default};\n            overflow: hidden;\n            border: 1px solid ${theme.line.color};\n          }\n          :global(code.language-text) {\n            background: ${theme.color.neutral.gray.c};\n            text-shadow: none;\n            color: inherit;\n            padding: 0.1em 0.3em 0.2em;\n            border-radius: 0.1em;\n          }\n        }\n\n        @keyframes bodytextEntry {\n          from {\n            opacity: 0;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nBodytext.propTypes = {\n  html: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Bodytext;\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Headline from \"../Article/Headline\";\nimport Bodytext from \"../Article/Bodytext\";\n\nconst Page = props => {\n  const {\n    page: {\n      html,\n      frontmatter: { title }\n    },\n    theme\n  } = props;\n\n  return (\n    <React.Fragment>\n      <header>\n        <Headline title={title} theme={theme} />\n      </header>\n      <Bodytext html={html} theme={theme} />\n    </React.Fragment>\n  );\n};\n\nPage.propTypes = {\n  page: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport Article from \"../components/Article\";\nimport Page from \"../components/Page\";\nimport { ThemeContext } from \"../layouts\";\n\nconst PageTemplate = props => {\n  const {\n    data: {\n      page,\n      site: {\n        siteMetadata: { facebook }\n      }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <Page page={page} theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo data={page} facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default PageTemplate;\n\n//eslint-disable-next-line no-undef\nexport const pageQuery = graphql`\n  query PageByPath($slug: String!) {\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n      }\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}